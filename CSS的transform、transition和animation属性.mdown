## CSS的transform、transition和animation属性
#### transform
0. transform属性需要添加供应商前缀，以下皆为简略写法
1. `transform: rotate(180deg);`  将元素顺时针旋转180°
2. `transform: scale(2);`  将元素放大两倍，同时元素内所有项目都会同步缩放
3. `transform: scaleX(3.5);`  宽放大3.5倍，高不变；`transform: scaleY(2)`  高放大两倍，宽不变
4. `transform: translate(1px,2px);`  将该元素向右移动1px，想下移动2px
5. `transform: skew(25deg, 10deg);`  将元素沿x轴方向逆时针倾斜25°，沿y轴顺时针倾斜10°
6. 多个transform函数共用  `transform: skew(45deg, 0deg) scale(.5) translate(400px, 500px) rotate(90deg);`  如果不使用translate，否则这个顺序无关紧要
7. 对一个元素应用transform时，浏览器默认以元素中心点作为变换点，可以通过`transform-origin`属性修改变换点，如`transform-origin: 0 0;`  绕左上角点旋转

----

#### transition
* transition控制在一定时间内一组CSS属性变换到另一组属性的动画展示过程，transition需要两个样式属性、一个触发器
``` CSS
.navButton {
	background-color: orange;
	transition-property: background-color;
	transition-duration: 1s;
}

.navBotton:hover {
	background-color: blue;
}

``` 
* 第一个属性`transition-property`定义了要以动画形式展示哪些属性，可以指定一个属性；或者用关键词all，展示发生变化的所有CSS属性；或者利用一个以逗号隔开的属性清单来指定多个属性，如`transition-property: color, background-color, border-color;`
* 第二个属性`transition-duration`指定订花要持续多久才结束，以秒或者毫秒为单位，多个属性的时间定义如下
```
transition-property: color, background-color, border-color;
transition-duration: .25s, .75s, 2s;
/*  属性排列顺序需与时间排列顺序一致  */
```
* 让一个transition属性生效，只需要设置transition-property和transition-duration。通过设置tansition-timing-function属性还可以控制动画的速度
* `transition-timing-function`属性值可以为一下关键字之一：linear、ease、ease-in、ease-out和ease-in-out
* `transition-delay`属性阻止transition立即开始展示动画，例如，让动画延时半秒才开始，可以添加代码：`transition-delay: .5s;`
* 一般来说，是将transition属性放在开始的样式中，而不是放在结束的样式中。使用CSS菜单时会有一个问题，鼠标移离开菜单就会很快地消失，需要通过设置transition-delay属性让菜单迅速显示，又慢慢地消失，既在初始样式中设置`transition-delay: 5s;`在:hover样式中设置`transiton-delay: 0s`
* transition快捷方法，`transition: all 1s ease-in .5s;`

------

#### animation
* animation通过设置若干个关键帧来创建动画，不需要触发器，创建animation动画分为两个步骤：首先定义动画创建关键帧，即列出要创建动画的CSS属性；然后将动画应用到元素上
``` 
@keyframes backgroundGlow {
	from {
	background-color: yellow;
}

/*  动画时间进行到一半时的关键帧  */
50% {
	background-color: blue;
}

to {
	background-color: red;
}
}
```
* 将动画应用到元素上
```
@keyframes fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
	/*  可见度从0到1  */
}

.announcement {
	animation-name: fadeIn;
	animation-duration: 1s;
}
```
* animation-duration属性与transition-duration属性类似，同样，animation-timing-function属性与transition-timing-function属性类似
* transition是只能运行一次的动画，animation通过设置`animation-iteration-conut`属性可以实现重复运行。`animation-iteration-conut: 10;`意为重复运行10次，`animation-iteration-conut: infinite`则是不限次数的运行
* 下面这段代码意为fade类元素应用fadeOut动画，这个动画运行2秒，然后再倒过来重复一次
```
@keyframes fadeOut {
	from { opacity: 1; }
	to { opacity: 0; }
}

.fade {
	animation-name: fadeOut;
	animation-duration: 2s
	animation-iteration-count: 2;
	animation-direction: alternate; /*  反方向  */
}
```
*在animation动画结束时保持动画结束时的样子可以使用属性`animation-fill-mode: forwards;`
* animation快捷方式，可以将下述第一段代码改成第二段代码
```
.fade{
	animation-name: fadeOut;
	animation-duration: 2s;
	animation-timing-function: ease-in-out;
	animation-oteration-count: 2;
	animation-direction: alternate;
	animation-delay: 5s;
	animation-fill-mode: forwards;
}
```
```
.fade { animation: fadeOut 2s ease-in-out 2 alternate 5s forwards; }
```
* animation还有一个用来控制动画播放的属性，`animation-play-state`，只接受两个关键词：running或者paused，如：
```
.fade:hover {
	animation-play-state: paused;
}
```

-----

### 实例
```
<!doctype html>
<html>
<head>
<meta charset="UTF-8">
<title>CSS3 Transforms, Transitions and Animations</title>
<link href="styles.css" rel="stylesheet">
<style>
nav a {
	-webkit-transition: -webkit-transform .5s,
						background-color: 1s ease-in 0.5s;
	-o-transition: all .5s;
	transition: all .5s;
}
nav a:hover {
	background-color: red;
	-webkit-transform: scale(1.2);
	-moz-transform: scale(1.2);
	-ms-transform: scale(1.2);
	transform: scale(1.2);
}
@-webkit-keyframes logo {
	from {
		-webkit-transform: rotate(0) scale(.5);
		left: 120%;
	}

	50% {
		-webkit-transform:rotate(-720deg) scale(.5);
		left: 0;
	}

	to {
		-webkit-transform:rotate(0) scale(1);
	}
}
.logo {
	-webkit-animation: logo 3s;
}
</style>
<!--[if lt IE 9]>
<script src="html5shiv.js"></script>
<![endif]-->
</head>
<body>
<header>
<div class="container">
<img src="logo.png" class="logo" width="150" height="150" alt="CSS3: The Missing Manual">
<h1>CSS3 Transforms, Transitions and Animations</h1>
<nav>
	<ul>
		<li><a href="#">Home</a></li>
		<li><a href="#">Gallery</a></li>
		<li><a href="#">Story</a></li>
		<li><a href="#">About Us</a></li>
	</ul>
</nav>
</div>
</header>
</body>
</html>
```